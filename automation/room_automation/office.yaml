- alias: Office - Play Spotify
  id: office_play_spotify
  trigger:
    platform: state
    entity_id:
      - switch.laptop
      - binary_sensor.laptop_in_use
      - group.office_occupancy
      - sensor.last_occupied_room
  condition:
    condition: and
    conditions:
      - "{{ is_state('switch.laptop', 'on') }}"
      - "{{ is_state('group.office_occupancy', 'on') }}"
      - "{{ not is_state('media_player.spotify_stukabombr1', 'playing') }}"
  action:
    - choose:
        - conditions: "{{ not is_state_attr('media_player.spotify_stukabombr1', 'source', '13204-MFUGATE') }}"
          sequence:
            - service: media_player.select_source
              entity_id: media_player.spotify_stukabombr1
              data:
                source: T480S-10-12813
            - delay: 2
    - service: media_player.media_play
      entity_id: media_player.spotify_stukabombr1

- alias: Office - Pause Spotify
  id: office_pause_spotify
  trigger:
    - platform: state
      entity_id:
        - media_player.gameroom_tv
        - media_player.livingroom_tv
      to: 'on'
    - platform: state
      entity_id:
        - switch.laptop
        - binary_sensor.laptop_in_use
        - group.office_occupancy
        - sensor.last_occupied_room
  condition: 
    condition: or
    conditions:
      - condition: and
        conditions:
          - "{{ is_state('switch.laptop', 'on') }}"
          - "{{ is_state('media_player.spotify_stukabombr1', 'playing') }}"
          - "{{ is_state('group.office_occupancy', 'off') }}"
          - "{{ is_state_attr('media_player.spotify_stukabombr1', 'source', '13204-MFUGATE') }}"
          - "{{ not is_state('sensor.last_occupied_room', 'office') }}"
      - "{{ trigger.entity_id.startswith('media_player') }}"
  action:
    service: media_player.media_pause
    entity_id: media_player.spotify_stukabombr1

- alias: Office - Occupancy On
  id: office_occupancy_on
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id:
        - sensor.office_aqara_fp1_presence_event
      to:
        - enter
        - left_enter
        - right_enter
        - approach
    - platform: state
      entity_id:
        - binary_sensor.office_motion_2
        - binary_sensor.office_motion_3
        - binary_sensor.laptop_in_use
        - binary_sensor.office_aqara_fp1_presence
      to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: 'off'
    - condition: state
      entity_id: person.mike
      state: 'home'
  action:
    service: input_boolean.turn_on
    entity_id: input_boolean.occupancy_office

- alias: Office - Occupancy Off
  id: office_occupancy_off
  mode: single
  max_exceeded: silent
  trigger:
    platform: state
    entity_id:
      - binary_sensor.office_motion_2
      - binary_sensor.office_motion_3
      - binary_sensor.laptop_in_use
      - binary_sensor.office_aqara_fp1_presence
    to: 'off'
  condition:
    condition: state
    entity_id: 
      - binary_sensor.office_motion_2
      - binary_sensor.office_motion_3
      - binary_sensor.laptop_in_use
      - binary_sensor.office_aqara_fp1_presence
    state: 'off'
  action:
    service: input_boolean.turn_off
    entity_id: input_boolean.occupancy_office

- alias: Office - Lights On
  id: office_lights_on
  mode: single
  max_exceeded: silent
  trigger:
    platform: state
    entity: input_boolean.occupancy_office
    to: 'on'
  action:
    service: light.turn_on
    entity_id: light.office

- alias: Office - Lights Off
  id: office_lights_off
  mode: restart
  trigger:
    - platform: state
      entity_id: input_boolean.occupancy_office
      to: 'off'
      for:
        seconds: "{{ states('input_number.office_occupancy_timeout_seconds') | int(0) }}"
    - platform: state
      entity_id: sensor.last_occupied_room
  condition:
    - condition: template
      value_template: >-
        {% set timeout = (states('input_number.office_occupancy_timeout_minutes') | int(0)) * 60 + (states('input_number.office_occupancy_timeout_seconds') | int(0)) %}
        {{ (now() - states.group.office_occupancy.last_updated).total_seconds() >= timeout }}
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.last_occupied_room
          state: office
  action:
    service: light.turn_off
    target:
      entity_id: light.office
