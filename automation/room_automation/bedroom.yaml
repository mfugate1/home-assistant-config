- alias: Bedroom light on
  id: bedroom_light_on
  mode: restart
  trigger:
    platform: state
    entity_id: group.bedroom_occupancy
    to: "on"
  condition:
    - condition: state
      entity_id:
        - binary_sensor.bed_occupied
        - input_boolean.sleep_mode
      state: "off"
    - condition: state
      entity_id: binary_sensor.bedroom_door
      state: "on"
    - condition: state
      entity_id: person.mike
      state: home
  action:
    service: light.turn_on
    target:
      entity_id: light.bedroom_overhead

- alias: Bedroom lights off
  id: bedroom_lights_off
  mode: restart
  trigger:
    - platform: state
      entity_id: group.bedroom_occupancy
      to: "off"
      for:
        minutes: >-
          {{ (states('input_number.bedroom_quick_timeout_minutes') if is_state('input_boolean.single_occupancy_mode', 'on') else states('input_number.bedroom_occupancy_timeout_minutes')) | int(0) }}
        seconds: >-
          {{ (states('input_number.bedroom_quick_timeout_seconds') if is_state('input_boolean.single_occupancy_mode', 'on') else states('input_number.bedroom_occupancy_timeout_seconds')) | int(0) }}
    - platform: state
      entity_id: sensor.last_occupied_room
  condition:
    - condition: template
      value_template: >-
        {% set type = 'quick' if is_state('input_boolean.single_occupancy_mode', 'on') else 'occupancy' %}
        {% set timeout = (states('input_number.bedroom_' + type + '_timeout_minutes') | int(0)) * 60 + (states('input_number.bedroom_' + type + '_timeout_seconds') | int(0)) %}
        {{ (now() - states.group.bedroom_occupancy.last_updated).total_seconds() > timeout }}
    - condition: state
      entity_id: group.bedroom_occupancy
      state: "off"
    - condition: not
      conditions:
        - condition: state
          entity_id: sensor.last_occupied_room
          state: bedroom
  action:
    service: light.turn_off
    target:
      entity_id: &allLights
        - light.bedroom_lamps
        - light.bedroom_overhead

- alias: Bedroom light switch to lamps if door closed
  id: bedroom_light_switch_to_lamps_if_door_closed
  mode: restart
  trigger:
    platform: state
    entity_id: binary_sensor.bedroom_door
    to: "off"
  condition:
    condition: state
    entity_id: input_boolean.sleep_mode
    state: "off"
  action:
    - service: light.turn_on
      target:
        entity_id: light.bedroom_lamps
    - delay: 10
    - service: light.turn_off
      target:
        entity_id: light.bedroom_overhead

- alias: Sleep Mode - Zwave Remote Button Toggle
  id: sleep_mode_zwave_remote_button_toggle
  mode: single
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: zwave_js_value_notification
      event_data:
        node_id: 20
        label: Scene 001
  condition: >-
    {{ trigger.event.data.value != 'KeyReleased' }}
  action:
    - choose:
        - conditions: "{{ is_state('input_boolean.sleep_mode', 'off')}}"
          sequence:
            - service: script.sleep_mode_on
              data:
                noise_entity: switch.bedroom_{{ 'fan' if trigger.platform == 'state' or trigger.event.data.value == 'KeyPressed' else 'noise_machine' }}
    - service: input_boolean.toggle
      entity_id: input_boolean.sleep_mode
    - delay: 2

- alias: Sleep Mode - On
  id: sleep_mode_on
  trigger:
    platform: state
    entity_id: input_boolean.sleep_mode
    to: "on"
  condition: "{{ trigger.to_state.context.user_id != none }}"
  action:
    service: script.sleep_mode_on
    data:
      noise_entity: switch.bedroom_fan

- alias: Sleep Mode - Off
  id: sleep_mode_off
  trigger:
    platform: state
    entity_id: input_boolean.sleep_mode
    to: "off"
  action:
    - service: switch.turn_off
      entity_id:
        - switch.bedroom_fan
        - switch.bedroom_noise_machine
    - condition: >
        {{ is_state('sun.sun', 'below_horizon') and
          (is_state('group.bedroom_occupancy', 'on') or
           is_state('binary_sensor.bedroom_door', 'off')) }}
    - service: light.turn_on
      entity_id: light.bedroom_lamps
      data:
        brightness: "{{ states('input_number.bedroom_wake_up_lamp_brightness') | int(0) }}"
        transition: "{{ states('input_number.bedroom_wake_up_lamp_transition') | int(0) }}"

- alias: Bedroom Remote - Toggle Buttons
  id: bedroom_remote_toggle_buttons
  mode: single
  max_exceeded: silent
  trigger:
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 20
  condition: >-
    {{ trigger.event.data.label not in ('Scene 001', 'Scene 004') and trigger.event.data.value != 'KeyReleased' }}
  action:
    - service: homeassistant.toggle
      target:
        entity_id: >-
          {% if trigger.event.data.label == 'Scene 002' %}
            light.bedroom_{{ 'overhead' if trigger.event.data.value == 'KeyPressed' else 'lamps' }}
          {% else %}
            switch.bedroom_{{ 'fan' if trigger.event.data.value == 'KeyPressed' else 'noise_machine' }}
          {% endif %}
    - delay: 2

- alias: Bedroom Remote - Bed Presets
  id: bedroom_remote_bed_presets
  mode: single
  max_exceeded: silent
  trigger:
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 20
      label: Scene 004
  condition: >-
    {{ trigger.event.data.value != 'KeyReleased' }}
  action:
    service: input_select.select_option
    target:
      entity_id: >-
        {% if is_state('input_select.bed_presets', 'Flat') %}
          {{ 'Read' if trigger.event.data.value == 'KeyPressed' else 'Watch TV' }}
        {% else %}
          Flat
        {% endif %}

- alias: Set bed firmness for Katy
  id: set_bed_firmness_for_katy
  trigger:
    platform: state
    entity_id: device_tracker.pixel_3a
    for: 00:30:00
  action:
    service: number.set_value
    entity_id: number.sleepnumber_master_bed_guest_firmness
    data:
      value: "{{ 50 if trigger.to_state.state == 'home' else 100 }}"
