- alias: 'Sleep mode: turn on'
  id: sleep_mode_turn_on
  trigger:
    - platform: state
      entity_id: binary_sensor.bed_occupied
      to: 'on'
    - platform: time
      at: input_datetime.turn_on_sleep_mode_after
  condition:
    - condition: state
      entity_id: binary_sensor.bed_occupied
      state: 'on'
    - condition: time
      after: input_datetime.turn_on_sleep_mode_after
  action:
    service: input_boolean.turn_on
    target:
      entity_id: input_boolean.sleep_mode

- alias: 'Sleep mode: turn off'
  id: sleep_mode_turn_off
  trigger:
    - platform: state
      entity_id: binary_sensor.bed_occupied
      to: 'off'
      for: "00:{{ ':'.join(states('input_datetime.turn_off_sleep_mode_if_bed_unoccupied_for').split(':')[0:2]) }}"
    - platform: time
      at: input_datetime.keep_sleep_mode_on_until
  condition:
    - condition: state
      entity_id: binary_sensor.bed_occupied
      state: 'off'
    - condition: time
      after: input_datetime.keep_sleep_mode_on_until
  action:
    service: input_boolean.turn_off
    target:
      entity_id: input_boolean.sleep_mode

- alias: 'Sleep mode: Set last start time'
  id: sleep_mode_set_last_start_time
  trigger:
    platform: state
    entity_id: input_boolean.sleep_mode
    to: 'on'
  action:
    service: input_datetime.set_datetime
    target:
      entity_id: input_datetime.sleep_mode_last_start_time
    data:
      timestamp: "{{ now().timestamp() }}"