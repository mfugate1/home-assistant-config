- alias: 'Upstairs bathroom lights on'
  id: upstairs_bathroom_lights_on
  trigger:
    platform: state
    entity_id: binary_sensor.upstairsbathroom_motion
    to: 'on'
  condition:
    condition: state
    entity_id: light.upstairsbathroom
    state: 'off'
  action:
    service: light.turn_on
    entity_id: light.upstairsbathroom
    data:
      brightness: "{{ states('input_number.upstairsbathroom_light_brightness')}}"
      transition: "{{ states('input_number.upstairsbathroom_light_transition')}}"

- alias: 'Upstairs bathroom vent control'
  id: upstairs_bathroom_vent_control
  trigger:
    platform: state
    entity_id: binary_sensor.upstairsbathroom_door
  action:
    service: >-
      {% if trigger.to_state.state == 'on' %}
        switch.turn_off
      {% else %}
        switch.turn_on
      {% endif %}
    entity_id: switch.upstairsbathroom_vent

- alias: 'Set upstairs bathroom light brightness'
  id: set_upstairs_bathroom_light_brightness
  trigger:
    platform: state
    entity_id:
      - input_boolean.sleep_mode
      - sun.sun
  action:
    service: input_number.set_value
    entity_id: input_number.upstairsbathroom_light_brightness
    data:
      value: >-
        {% if is_state('input_boolean.sleep_mode', 'on') %}
          {{ states('input_number.upstairsbathroom_light_sleeping_brightness') }}
        {% elif is_state('sun.sun', 'above_horizon') %}
          {{ states('input_number.upstairsbathroom_light_day_brightness') }}
        {% else %}
          {{ states('input_number.upstairsbathroom_light_night_brightness') }}
        {% endif %}

- alias: 'Upstairs bathroom lights off if door opens'
  id: upstairs_bathroom_lights_off_if_door_opens
  trigger:
    platform: state
    entity_id: binary_sensor.upstairsbathroom_door
    to: 'on'
  action:
    - wait_for_trigger:
        platform: state
        entity_id: binary_sensor.upstairsbathroom_motion
        to: 'off'
        for: "00:{{ ':'.join(states('input_datetime.upstairsbathroom_door_opened_motion_off_for').split(':')[0:2]) }}"
      timeout: "00:{{ ':'.join(states('input_datetime.upstairsbathroom_door_opened_motion_off_timeout').split(':')[0:2]) }}"
      continue_on_timeout: false
    - condition: state
      entity_id: binary_sensor.upstairsbathroom_door
      state: 'on'
    - service: homeassistant.turn_off
      entity_id: 
        - light.upstairsbathroom
        - switch.upstairsbathroom_vent
        
- alias: 'Upstairs bathroom light off'
  id: upstairs_bathroom_light_off
  trigger:
    platform: state
    entity_id: binary_sensor.upstairsbathroom_motion
    to: 'off'
    for: >-
      {% if is_state('binary_sensor.upstairsbathroom_door', 'on') %}
        00:{{ ':'.join(states('input_datetime.upstairsbathroom_light_off_door_open_for').split(':')[0:2]) }}
      {% else %}
        00:{{ ':'.join(states('input_datetime.upstairsbathroom_light_off_door_closed_for').split(':')[0:2]) }}
      {% endif %}
  condition:
    condition: state
    entity_id: binary_sensor.upstairsbathroom_door
    state: 'on'
  action:
    service: homeassistant.turn_off
    entity_id: 
      - light.upstairsbathroom
      - switch.upstairsbathroom_vent
