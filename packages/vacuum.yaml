automation:

  - alias: Vacuum - Basement (Remus)
    id: vacuum_basement
    triggers:
      - trigger: time
        at: input_datetime.vacuum_basement_time
    actions:
      - wait_template: "{{ is_state('group.presence_basement', 'off') }}"
        timeout: '01:00:00'
        continue_on_timeout: false
      - action: vacuum.start
        entity_id: vacuum.remus

  - alias: Vacuum - Garage (Julian)
    id: vacuum_garage
    triggers:
      - trigger: time
        at: input_datetime.vacuum_garage_time
    actions:
      - wait_template: "{{ is_state('binary_sensor.garage_presence_all_zones', 'off') }}"
        timeout: '01:00:00'
        continue_on_timeout: false
      - action: vacuum.start
        entity_id: vacuum.julian

  - alias: Vacuum - First Floor Unoccupied (Romulus)
    id: vacuum_first_floor_unoccupied
    triggers:
      - trigger: time
        at: input_datetime.vacuum_first_floor_unoccupied_time
    conditions:
      - condition: state
        entity_id: person.mike
        state: not_home
    actions:
      - wait_template: "{{ is_state('group.presence_first_floor', 'off') }}"
        timeout: '01:00:00'
        continue_on_timeout: false
      - action: vacuum.start
        entity_id: vacuum.romulus

  - alias: Vacuum - Second Floor (Ricky)
    id: vacuum_second_floor
    variables:
      minutes_since_floor_occupied: "{{ ((now() | as_timestamp) - (states('sensor.time_second_floor_was_last_occupied') | as_timestamp)) / 60 }}"
    triggers:
      - trigger: time_pattern
        minutes: "/30"
      - trigger: state
        entity_id: person.mike
        from: home
        to: not_home
        for:
          minutes: 1
    conditions:
      - condition: state
        entity_id: vacuum.ricky
        state: docked
      - condition: state
        entity_id: binary_sensor.vacuum_second_floor_ran_today
        state: 'off'
      - or:
        - condition: state
          entity_id: person.mike
          state: not_home
        - and:
          - condition: state
            entity_id: group.presence_second_floor
            state: 'off'
          - "{{ minutes_since_floor_occupied > states('input_number.vacuum_second_floor_minimum_unoccupied_time_before_cleaning') | int(24) }}"
          - or:
            - condition: time
              after: input_datetime.vacuum_second_floor_run_after_on_weekdays
            - condition: time
              weekday:
                - sat
                - sun
    actions:
      - action: vacuum.start
        entity_id: vacuum.ricky

input_datetime:
  vacuum_basement_time:
    has_date: false
    has_time: true
  vacuum_garage_time:
    has_date: false
    has_time: true
  vacuum_first_floor_unoccupied_time:
    has_date: false
    has_time: true
  vacuum_second_floor_run_after_on_weekdays:
    has_date: false
    has_time: true

input_number:
  vacuum_second_floor_minimum_unoccupied_time_before_cleaning:
    min: 1
    max: 120
    mode: box
    unit_of_measurement: min

template:
  - binary_sensor:
    - name: vacuum_second_floor_ran_today
      state: "{{ (states('sensor.ricky_last_clean_begin') | as_timestamp | timestamp_custom('%Y-%m-%d')) == (now() | as_timestamp | timestamp_custom('%Y-%m-%d')) }}"