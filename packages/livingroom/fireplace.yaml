automation:
  - alias: Living Room - Fireplace Nightlight
    id: KxV6hw10KLBN5HG92qd8D0hv2SsCE7
    mode: restart
    triggers:
      - trigger: state
        entity_id: binary_sensor.livingroom_fireplace_desired_state
        to: ['off', 'on']
    conditions: "{{ states('binary_sensor.livingroom_fireplace_desired_state') in ['off', 'on'] }}"
    actions:
      - variables:
          desired_state: "{{ states('binary_sensor.livingroom_fireplace_desired_state') }}"
          brightness: "{{ states('input_number.livingroom_fireplace_nightlight_default_brightness') | int(100) }}"
      - action: light.turn_{{ desired_state }}
        entity_id: light.fireplace_night_light
        data: "{{ {'brightness_pct': brightness} if desired_state == 'on' else {} }}"

  - alias: Living Room - Turn On Fireplace
    id: living_room_turn_on_fireplace
    mode: queued
    variables:
      room_temp: "{{ states('sensor.living_room_temperature_sensor_air_temperature') | float }}"
      outside_temp: "{{ states('sensor.front_porch_sensor_air_temperature') | float }}"
      on_threshold_temp: "{{ states('input_number.living_room_fireplace_on_temperature_threshold') | float }}"
      on_outside_threshold_temp: "{{ states('input_number.living_room_fireplace_on_outside_temperature_threshold') | float }}"
    triggers:
      - trigger: state
        entity_id: binary_sensor.living_room_presence_couch_zone
        to: 'on'
        for:
          seconds: "{{ states('input_number.living_room_fireplace_on_delay') }}"
      - trigger: state
        entity_id: sensor.living_room_temperature_sensor_air_temperature
    conditions: >
      {{     is_state('light.fireplace_flame', 'off')
          and is_state('person.mike', 'home')
          and is_state('binary_sensor.living_room_presence_couch_zone', 'on')
          and is_state('sensor.last_hvac_state', 'heating')
          and room_temp <= on_threshold_temp
          and outside_temp <= on_outside_threshold_temp }}
    actions:
      - action: light.turn_on
        entity_id: light.fireplace_flame
        data:
          brightness_pct: 100

  - alias: Living Room - Turn Off Fireplace
    id: living_room_turn_off_fireplace
    mode: queued
    triggers:
      - trigger: state
        entity_id: binary_sensor.living_room_presence_couch_zone
        to: 'off'
        for:
          seconds: "{{ states('input_number.living_room_fireplace_off_delay') }}"
      - trigger: numeric_state
        entity_id: sensor.living_room_temperature_sensor_air_temperature
        above: input_number.living_room_fireplace_off_temperature_threshold
    actions:
      - action: light.turn_off
        entity_id: light.fireplace_flame

  - alias: Living Room - Toggle Fireplace Blower
    id: living_room_turn_on_fireplace_blower
    mode: queued
    triggers:
      - trigger: state
        entity_id: light.fireplace_flame
        to: ['off', 'on']
        id: light_change
      - trigger: state
        entity_id: input_number.livingroom_fireplace_blower_default_speed
        id: speed_change
    conditions: "{{ trigger.id == 'light_change' or is_state('light.fireplace_flame', 'on') }}"
    actions:
      - variables:
          current_state: "{{ states('light.fireplace_flame') }}"
      - action: fan.turn_{{ current_state }}
        target:
          entity_id: fan.fireplace_blower
        data: >
          {% if current_state == 'on' %}
            {"percentage": {{ states('input_number.livingroom_fireplace_blower_default_speed') }} }
          {% else %}
            {}
          {% endif %}

  - alias: Living Room - Save Fireplace Blower Speed
    id: livingroom_save_fireplace_blower_speed
    mode: restart
    triggers:
      - trigger: state
        entity_id: fan.fireplace_blower
        attribute: percentage
    conditions: "{{ is_state('light.fireplace_flame', 'on') }}"
    actions:
      - delay:
          seconds: "{{ states('input_number.livingroom_fireplace_blower_save_blower_speed_debounce_delay') | int(5) }}"
      - action: input_number.set_value
        target:
          entity_id: input_number.livingroom_fireplace_blower_default_speed
        data:
          value: "{{ state_attr('fan.fireplace_blower', 'percentage') | int }}"

  - alias: Living Room - Disable Fireplace Automation When User Turns Fireplace Off
    id: livingroom_disable_fireplace_automation_when_user_turns_fireplace_off
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        entity_id: light.fireplace_flame
        to: 'off'
    conditions: "{{ trigger.to_state.context.user_id is not none and is_state('binary_sensor.living_room_presence_all_zones', 'off') }}"
    actions:
      - action: automation.turn_off
        target:
          entity_id: automation.living_room_turn_on_fireplace

  - alias: Living Room - Enable Fireplace On Automation
    id: livingroom_enable_fireplace_on_automation
    mode: single
    max_exceeded: silent
    triggers:
      - trigger: state
        id: presence_off
        entity_id: binary_sensor.living_room_presence_all_zones
        to: 'off'
        for:
          minutes: "{{ states('input_number.livingroom_enable_fireplace_automation_after_minutes') | int(0) }}"
          hours: "{{ states('input_number.livingroom_enable_fireplace_automation_after_hours') | int(4) }}"
      - trigger: state
        id: fire_on
        entity_id: light.fireplace_flame
        to: 'on'
      - trigger: time
        id: daily_reset
        at: input_datetime.livingroom_enable_fireplace_automation_daily_reset
    conditions: "{{ is_state('input_boolean.livingroom_enable_fireplace_automation_' + trigger.id + '_enabled', 'on') }}"
    actions:
      - action: automation.turn_on
        target:
          entity_id: automation.living_room_turn_on_fireplace

template:
  - binary_sensor:
    - name: livingroom_fireplace_desired_state
      unique_id: OY6OI7d4ad9o3NuTJeLWLXimM2wrlW
      state: >
        {% set presence = is_state('binary_sensor.living_room_presence_all_zones', 'on') %}
        {% set elevation_threshold = states('input_number.livingroom_fireplace_nightlight_on_below_elevation') | float %}
        {{ presence and state_attr('sun.sun', 'elevation') | float < elevation_threshold }}

input_boolean:
  livingroom_enable_fireplace_automation_presence_off_enabled:
  livingroom_enable_fireplace_automation_fire_on_enabled:
  livingroom_enable_fireplace_automation_daily_reset_enabled:

input_datetime:
  livingroom_enable_fireplace_automation_daily_reset:
    has_date: false
    has_time: true

input_number:
  livingroom_enable_fireplace_automation_after_minutes:
    min: 0
    max: 60
    mode: box
    unit_of_measurement: min
  livingroom_enable_fireplace_automation_after_hours:
    min: 0
    max: 24
    mode: box
    unit_of_measurement: hr
  livingroom_fireplace_blower_save_blower_speed_debounce_delay:
    min: 0
    max: 30
    mode: box
    unit_of_measurement: s
  livingroom_fireplace_blower_default_speed: &percentage
    min: 0
    max: 100
    mode: box
    unit_of_measurement: "%"
  living_room_fireplace_off_delay: &delay
    min: 0
    max: 5000
    mode: box
    unit_of_measurement: s
  living_room_fireplace_on_delay: *delay
  living_room_fireplace_off_temperature_threshold: &temp
    min: 30
    max: 90
    mode: box
    unit_of_measurement: °F
  living_room_fireplace_on_outside_temperature_threshold: *temp
  living_room_fireplace_on_temperature_threshold: *temp
  livingroom_fireplace_nightlight_on_below_elevation:
    min: -20
    max: 20
    mode: box
    unit_of_measurement: °
  livingroom_fireplace_nightlight_default_brightness: *percentage