input_number:
  livingroom_music_volume:
    min: 0
    max: 80
    mode: box

# Helpers for the template selects, should never need to be changed by a user.
input_text:
  livingroom_receiver_music_source:
  livingroom_spotify_playlist:

switch:
  - platform: template
    switches:
      livingroom_music:
        friendly_name: Music
        icon_template: mdi:music
        value_template: "{{ is_state('media_player.livingroom_receiver', 'on') and is_state('media_player.livingroom_squeezebox', 'playing') }}"
        availability_template: "{{ not is_state('media_player.livingroom_receiver', 'unavailable') and not is_state('media_player.livingroom_squeezebox', 'unavailable')}}"
        turn_on:
          - variables:
              house_source: "{{ states('sensor.spotify_whole_house_source_name') }}"
              spotify_entity: media_player.spotify_stukabombr1
          - parallel:
            - action: script.livingroom_receiver_turn_on
              data:
                source: "{{ states('input_text.livingroom_music_receiver_source') }}"
                volume: "{{ states('input_number.livingroom_music_volume') }}"
            - sequence:
              - if: "{{ not is_state_attr(spotify_entity, 'source', house_source)}}"
                then:
                  - action: media_player.select_source
                    target:
                      entity_id: "{{ spotify_entity }}"
                    data:
                      source: "{{ house_source }}"
                  - delay: "{{ states('input_number.spotify_source_change_delay') | int(5) }}"
              - action: script.spotify_play_playlist
            - action: script.turn_off_with_repeat
              data:
                entity_id: switch.livingroom_ps5
                repeat_delay: "{{ states('input_number.livingroom_ps5_turn_off_repeat_delay') | int(20) }}"
                max_retries: 20
        turn_off:
          - variables:
              number_of_rooms_music_is_playing_in: "{{ state_attr('active_music_rooms', 'rooms') | length }}"
          - action: media_player.turn_off
            entity_id: media_player.livingroom_receiver
          - if: "{{ number_of_rooms_music_is_playing_in == 1 }}"
            then:
              action: media_player.media_pause
              target:
                entity_id: media_player.spotify_stukabombr1


template:
  - select:
      # A dynamic select entity to configure which source the receiver should be set to to play music.
      - name: livingroom_receiver_music_source
        unique_id: livingroom_receiver_music_source
        state: "{{ states('input_text.livingroom_receiver_music_source') }}"
        options: "{{ state_attr('media_player.livingroom_receiver', 'source_list') }}"
        select_option:
          action: input_text.set_value
          entity_id: input_text.livingroom_receiver_music_source
          data:
            value: "{{ option }}"

      # Have select entities specific to each room, but pulling options from a master input_select.
      - name: livingroom_spotify_playlist
        unique_id: livingroom_spotify_playlist
        state: "{{ states('input_text.livingroom_spotify_playlist') }}"
        options: "{{ state_attr('input_select.spotify_playlists', 'options') }}"
        select_option:
          action: input_text.set_value
          entity_id: input_text.livingroom_spotify_playlist
          data:
            value: "{{ option }}"