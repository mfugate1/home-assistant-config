automation:

  - alias: Garage switches up 1x - light on
    id: garage_switches_up_1x_light_on
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data:
          node_id: 3
          property_key: "002"
          value: KeyPressed
      - platform: event
        event_type: zwave_js_value_notification
        event_data:
          node_id: 5
          property_key: "002"
          value: KeyPressed
    action:
      service: light.turn_on
      entity_id: light.garage

  - alias: Garage switches down 1x - light off
    id: garage_switches_down_1x_light_off
    trigger:
      - platform: event
        event_type: zwave_js_value_notification
        event_data:
          node_id: 3
          property_key: "001"
          value: KeyPressed
      - platform: event
        event_type: zwave_js_value_notification
        event_data:
          node_id: 5
          property_key: "001"
          value: KeyPressed
    action:
      service: light.turn_off
      entity_id: light.garage

  - alias: Garage - Keep light switches in sync with relays
    id: garage_keep_light_switches_in_sync_with_relays
    trigger:
      platform: state
      entity_id: light.garage
    action:
      - variables:
          entities:
            - light.garage_outer_switch
            - light.garage_inner_switch
      - choose:
          - conditions: "{{ trigger.to_state.state == 'on' }}"
            sequence:
              - service: light.turn_on
                target:
                  entity_id: "{{ entities }}"
                data:
                  brightness_pct: 100
                  transition: 0
        default:
          - service: light.turn_off
            target:
              entity_id: "{{ entities }}"
            data:
              transition: 0

  - alias: Garage - Lights On
    id: garage_lights_on
    mode: restart
    trigger:
      platform: state
      entity_id: binary_sensor.garage_presence_all_zones
      to: "on"
    action:
      service: light.turn_on
      entity_id: light.garage

  - alias: Garage - Lights Off
    id: garage_lights_off
    mode: restart
    trigger:
      platform: state
      entity_id: binary_sensor.garage_presence_all_zones
      to: "off"
      for:
        seconds: "{{ states('input_number.garage_lights_off_timeout') | int(60) }}"
    action:
      service: light.turn_off
      entity_id: light.garage

input_number:

  # The amount of time the garage must be unoccupied before lights turn off
  garage_lights_off_timeout:
    min: 1
    max: 600
    mode: box
    unit_of_measurement: s

light:
  - platform: template
    lights:
      garage:
        friendly_name: Garage Lights
        value_template: >-
          {{ is_state('switch.garage_light_relay_left', 'on') or is_state('switch.garage_light_relay_right', 'on') or is_state('switch.garage_neon_sign', 'on') }}
        turn_on:
          service: switch.turn_on
          entity_id:
            - switch.garage_light_relay_left
            - switch.garage_light_relay_right
            - switch.garage_neon_sign
        turn_off:
          service: switch.turn_off
          entity_id:
            - switch.garage_light_relay_left
            - switch.garage_light_relay_right
            - switch.garage_neon_sign