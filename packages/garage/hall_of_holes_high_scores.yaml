script:
  hall_of_holes_add_player:
    alias: Hall of Holes - Add Player
    mode: queued
    fields:
      browser_id:
        description: The browser ID this script is being called from
        default: hall-of-holes-tablet
    sequence:
      - variables:
          new_name: "{{ states('input_text.hall_of_holes_add_player_name') }}"
      - service: notify.hall_of_holes_db
        data:
          message: "CREATE TABLE IF NOT EXISTS players (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(64))"
      - service: mysql_query.query
        response_variable: existing_players_query
        data:
          query: SELECT name FROM players
      - if: "{{ new_name in (existing_players_query.result | map(attribute='name') | list) }}"
        then:
          - service: browser_mod.popup
            data:
              browser_id: "{{ browser_id }}"
              content: Player already exists in database.
        else:
          - service: notify.hall_of_holes_db
            data:
              message: "INSERT INTO players (name) VALUES ('{{ new_name }}')"
          - service: input_text.set_value
            entity_id: input_text.hall_of_holes_add_player_name
            data:
              value: ''
          - service: script.hall_of_holes_load_players

  hall_of_holes_load_players:
    alias: Hall of Holes - Load Players
    mode: queued
    sequence:
      - service: mysql_query.query
        response_variable: existing_players_query
        data:
          query: SELECT name FROM players
      - service: input_select.set_options
        entity_id: input_select.hall_of_holes_players
        data:
          options: "{{ existing_players_query.result | map(attribute='name') | list }}"

input_select:
  hall_of_holes_players:
    name: Player
    icon: mdi:handball
    options:
      - "Reload Me!"
  hall_of_holes_games:
    name: Games
    options:
      - Air Hockey
      - Basketball
      - Darts
      - Pinball
      - Pool
      - Skeeball

input_text:
  hall_of_holes_add_player_name:
    name: Enter new player name here

template:
  - trigger:
      - platform: state
        entity_id: input_select.hall_of_holes_players
    action:
      - service: mysql_query.query
        response_variable: id_query
        data:
          query: "SELECT id from players WHERE name = '{{ trigger.to_state.state }}'"
    sensor:
      - name: hall_of_holes_currently_selected_player_id
        state: "{{ id_query.result[0].id }}"

