automation:
  - alias: Close Shades at Sunset, Open Shades at Sunrise
    id: close_shades_at_sunset_open_shades_at_sunrise
    mode: single
    triggers:
      - trigger: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: input_number.close_shades_below_sun_elevation
        id: close
      - trigger: numeric_state
        entity_id: sun.sun
        attribute: elevation
        above: input_number.open_shades_above_sun_elevation
        id: open
    actions:
      - action: "cover.{{ trigger.id }}_cover"
        target:
          entity_id: "{{ states.cover | selectattr('entity_id', 'search', '^cover.window') | map(attribute='entity_id') | list }}"

  - alias: Windows - Control Shades Based on TV States
    id: windows_control_shades_based_on_tv_states
    mode: queued
    triggers:
      - trigger: state
        entity_id:
          - binary_sensor.guestroomdouble_tv
          - binary_sensor.guestroomsingle_tv
        to:
          - 'off'
          - 'on'
    conditions: "{{ trigger.to_state.state == 'on' or is_state('sun.sun', 'above_horizon') }}"
    actions:
      - variables:
          room: "{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
          shade: "{{ 'side' if room == 'guestroomdouble' else 'back' }}"
          action: "{{ 'close' if trigger.to_state.state == 'on' else 'open' }}"
      - action: cover.{{ action }}_cover
        target:
          entity_id: cover.window_{{ room }}_{{ shade }}


  - alias: Voice - Control Window Shades
    id: voice_control_window_shades
    mode: parallel
    triggers:
      - trigger: conversation
        command:
          - "{command} the [window] (shades|shade|blinds|blind|curtains|curtain|covers|cover)"
    actions:
      - variables:
          command: "{{ trigger.slots.command.lower() }}"
          entities: "{{ trigger.device_id | area_id | area_entities | select('search', '^cover') | list }}"
      - choose:
          - conditions: "{{ not entities }}"
            sequence:
              - set_conversation_response: Sorry, there aren't any window covers to control in this area.
          - conditions: "{{ command not in ['open', 'close'] }}"
            sequence:
              - set_conversation_response: >
                  It looks like you're trying to control the shades in this room, but you didn't use a supported command.
                  I heard you say {{ trigger.sentence }}. Try saying 'open the shades' or 'close the shades'.
        default:
          - action: cover.{{ command }}_cover
            target:
              entity_id: "{{ entities }}"
          - set_conversation_response: "{{ 'closing' if command == 'close' else 'opening' }} the window covers"

input_number:
  close_shades_below_sun_elevation: &elevation
    min: -30
    max: 30
    step: 0.1
    mode: box
    unit_of_measurement: Â°
  open_shades_above_sun_elevation: *elevation
