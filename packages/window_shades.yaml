automation:
  - alias: Close Shades at Sunset, Open Shades at Sunrise
    id: close_shades_at_sunset_open_shades_at_sunrise
    mode: single
    triggers:
      - trigger: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: input_number.close_shades_below_sun_elevation
        id: close
      - trigger: numeric_state
        entity_id: sun.sun
        attribute: elevation
        above: input_number.open_shades_above_sun_elevation
        id: open
    actions:
      - variables:
          shades:
            - bedroom_shade_front
            - bedroom_shade_side
            - guest_room_double_shade_front_inverted
            - guest_room_double_shade_side_inverted
            - guest_room_single_shade_back
            - guest_room_single_shade_side
            - office_shade_side
      - action: "cover.{{ trigger.id }}_cover"
        target:
          entity_id: >
            {% set entities = namespace(ids=[]) %}
            {% for shade in shades %}
              {% if is_state('input_boolean.' + shade + '_auto', 'on') %}
                {% set entities.ids = entities.ids + ['cover.' + shade] %}
              {% endif %}
            {% endfor %}
            {{ entities.ids }}

  - alias: Voice - Control Window Shades
    id: voice_control_window_shades
    mode: parallel
    triggers:
      - trigger: conversation
        command:
          - "{command} the [window] (shades|shade|blinds|blind|curtains|curtain|covers|cover)"
    actions:
      - variables:
          command: "{{ trigger.slots.command.lower() }}"
          entities: "{{ trigger.device_id | area_id | area_entities | select('search', '^cover') | list }}"
      - choose:
          - conditions: "{{ not entities }}"
            sequence:
              - set_conversation_response: Sorry, there aren't any window covers to control in this area.
          - conditions: "{{ command not in ['open', 'close'] }}"
            sequence:
              - set_conversation_response: >
                  It looks like you're trying to control the shades in this room, but you didn't use a supported command.
                  I heard you say {{ trigger.sentence }}. Try saying 'open the shades' or 'close the shades'.
        default:
          - action: cover.{{ command }}_cover
            target:
              entity_id: "{{ entities }}"
          - set_conversation_response: "{{ 'closing' if command == 'close' else 'opening' }} the window covers"

input_boolean:
  bedroom_shade_front_auto:
  bedroom_shade_side_auto:
  guest_room_double_shade_front_inverted_auto:
  guest_room_double_shade_side_inverted_auto:
  guest_room_single_shade_back_auto:
  guest_room_single_shade_side_auto:
  office_shade_side_auto:

input_number:
  close_shades_below_sun_elevation: &elevation
    min: -30
    max: 30
    step: 0.1
    mode: box
    unit_of_measurement: Â°
  open_shades_above_sun_elevation: *elevation
