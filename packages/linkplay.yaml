automation:
  - alias: Linkplay - Remember Last Spotify Playlist
    id: linkplay_remember_last_spotify_playlist
    mode: queued
    trigger:
      - platform: state
        entity_id: sensor.linkplay_stream_uri_values
    action:
      - service: input_text.set_value
        entity_id: input_text.linkplay_last_spotify_playlist
        data:
          value: >
            {% set value = states('input_text.linkplay_last_spotify_playlist') %}
            {% for player, stream_uri in (states('sensor.linkplay_stream_uri_values') | from_json).items() %}
              {% if player == states('select.linkplay_group_master') %}
                {% set value = stream_uri %}
              {% endif %}
            {% endfor %}
            {{ value }}

input_text:
  linkplay_group_master:
  linkplay_last_spotify_playlist:

template:
  - select:
    - name: linkplay_group_master
      unique_id: linkplay_group_master
      state: "{{ states('input_text.linkplay_group_master') }}"
      options: "{{ states('sensor.linkplay_media_players') | from_json }}"
      select_option:
        service: input_text.set_value
        entity_id: input_text.linkplay_group_master
        data:
          value: "{{ option }}"

  - sensor:
    - name: linkplay_media_players
      state: >
        {% set entities = namespace(ids=[]) %}
        {% for player in states.media_player  %}
          {% if 'firmware' in player.attributes and player.attributes.firmware.startswith('Linkplay') %}
            {% set entities.ids = entities.ids + [player.entity_id] %}
          {% endif %}
        {% endfor %}
        {{ entities.ids | to_json }}

    - name: linkplay_stream_uri_values
      state: >
        {% set ns = namespace(values={}) %}
        {% for player in states('sensor.linkplay_media_players') | from_json  %}
          {% if state_attr(player, 'stream_uri') and state_attr(player, 'stream_uri').startswith('spotify:playlist:') %}
            {% set ns.values = dict(ns.values, **{player: state_attr(player, 'stream_uri')}) %}
          {% endif %}
        {% endfor %}
        {{ ns.values | to_json }}