type: entities
view_layout:
  grid-area: exercise
card_mod:
  style: |
    ha-card {
      border-radius: 10px;
    }
title: Exercise Progress
entities:
  - type: conditional
    conditions:
      - entity: sensor.template_garmin_challenge_01
        state_not: 'unavailable'
    row:
      type: custom:config-template-card
      variables:
        GOAL: states['sensor.template_garmin_challenge_01'].attributes.goal
        NAME: states['sensor.template_garmin_challenge_01'].friendly_name
        STATE: states['sensor.template_garmin_challenge_01'].state
        getDisplay: |
          state => {
            switch(state) {
              case 'active':
                return states['sensor.template_garmin_challenge_01'].attributes.current_progress + ' / ' + states['sensor.template_garmin_challenge_01'].attributes.goal
              case 'inactive':
                return 'Starts on ' + states['sensor.template_garmin_challenge_01'].attributes.start_date
              case 'complete':
                return 'DONE! ' + states['sensor.template_garmin_challenge_01'].attributes.current_progress + ' ' + states['sensor.template_garmin_challenge_01'].attributes.units
            }
          }
      entities:
        - sensor.template_garmin_challenge_01
      row:
        type: custom:bar-card
        entity: sensor.template_garmin_challenge_01
        name: "${NAME + ': ' + getDisplay(STATE)}"
        min: 0
        max: "${GOAL}"
        entity_row: true
        positions:
          value: 'off'
        severity:
          - from: 0
            to: "${GOAL - 0.01}"
            color: darkred
          - from: "${GOAL}"
            to: "${GOAL + 100000}"
            color: darkgreen
        style: |
          bar-card-contentbar {
            font-weight: bold;
            color: gold;
          }
          bar-card-name {
            margin-left: 10px;
          }
          bar-card-currentbar {
            border-radius: 10px;
          }
          bar-card-backgroundbar {
            border-radius: 10px;
          }
